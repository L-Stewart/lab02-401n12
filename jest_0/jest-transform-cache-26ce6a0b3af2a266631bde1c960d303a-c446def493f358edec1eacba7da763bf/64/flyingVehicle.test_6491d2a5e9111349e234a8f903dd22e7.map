{"version":3,"sources":["flyingVehicle.test.js"],"names":["FlyingVehicle","require","describe","jet","Airplane","it","expect","engines","toEqual","on","toBeTruthy","flying","errr","kiro","Helicopter"],"mappings":"AAAA,a,CAEA;;AACA,MAAMA,aAAa,GAAGC,OAAO,CAAC,yCAAD,CAA7B;;AAEAC,QAAQ,CAAC,iBAAD,EAAoB,MAAM;AAEhCA,EAAAA,QAAQ,CAAC,UAAD,EAAa,MAAM;AAEzB,QAAIC,GAAG,GAAG,IAAIH,aAAa,CAACI,QAAlB,CAA2B,KAA3B,CAAV;AAEAC,IAAAA,EAAE,CAAC,wBAAD,EAA2B,MAAM;AACjCC,MAAAA,MAAM,CAACH,GAAG,CAACI,OAAL,CAAN,CAAoBC,OAApB,CAA4B,CAA5B;AACD,KAFC,CAAF;AAIAH,IAAAA,EAAE,CAAC,gBAAD,EAAmB,MAAM;AACzBC,MAAAA,MAAM,CAACH,GAAG,CAACM,EAAJ,EAAD,CAAN,CAAiBC,UAAjB;AACD,KAFC,CAAF;AAIAL,IAAAA,EAAE,CAAC,YAAD,EAAe,MAAM;AACrBC,MAAAA,MAAM,CAACH,GAAG,CAACQ,MAAJ,EAAD,CAAN,CAAqBD,UAArB;AACD,KAFC,CAAF;AAIAL,IAAAA,EAAE,CAAC,sDAAD,EAAyD,MAAM;AAC/DC,MAAAA,MAAM,CAACH,GAAG,CAACS,IAAJ,EAAD,CAAN,CAAmBJ,OAAnB,CAA2B,qCAA3B;AACD,KAFC,CAAF;AAID,GApBO,CAAR;AAsBAN,EAAAA,QAAQ,CAAC,YAAD,EAAe,MAAM;AAE3B,QAAIW,IAAI,GAAG,IAAIb,aAAa,CAACc,UAAlB,CAA6B,gBAA7B,CAAX;AAEAT,IAAAA,EAAE,CAAC,wBAAD,EAA2B,MAAM;AACjCC,MAAAA,MAAM,CAACO,IAAI,CAACN,OAAN,CAAN,CAAqBC,OAArB,CAA6B,CAA7B;AACD,KAFC,CAAF;AAIAH,IAAAA,EAAE,CAAC,gBAAD,EAAmB,MAAM;AACzBC,MAAAA,MAAM,CAACO,IAAI,CAACJ,EAAL,EAAD,CAAN,CAAkBC,UAAlB;AACD,KAFC,CAAF;AAIAL,IAAAA,EAAE,CAAC,YAAD,EAAe,MAAM;AACrBC,MAAAA,MAAM,CAACO,IAAI,CAACF,MAAL,EAAD,CAAN,CAAsBD,UAAtB;AACD,KAFC,CAAF;AAIAL,IAAAA,EAAE,CAAC,sBAAD,EAAyB,MAAM;AAC/BC,MAAAA,MAAM,CAACO,IAAI,CAACF,MAAL,EAAD,CAAN,CAAsBH,OAAtB,CAA8B,kBAA9B;AACD,KAFC,CAAF;AAGD,GAnBO,CAAR;AAoBD,CA5CO,CAAR","sourcesContent":["'use strict';\n\n// const FlyingVehicle = require('../flyingVehicle/flyingVehicle-factory.js');\nconst FlyingVehicle = require('../flyingVehicle/flyingVehicle-class.js');\n\ndescribe('Flying Vehicles', () => {\n\n  describe('Airplane', () => {\n\n    let jet = new FlyingVehicle.Airplane('737');\n\n    it('should have 4 engines ', () => {\n      expect(jet.engines).toEqual(4);\n    });\n\n    it('should turn on', () => {\n      expect(jet.on()).toBeTruthy();\n    });\n\n    it('should fly', () => {\n      expect(jet.flying()).toBeTruthy();\n    });\n\n    it('should have a pilot with terrible speaking capacity ', () => {\n      expect(jet.errr()).toEqual('Thank you for flying with us today.');\n    });\n\n  });\n\n  describe('Helicopter', () => {\n\n    let kiro = new FlyingVehicle.Helicopter('News Chopper 1');\n\n    it('should have 2 engines ', () => {\n      expect(kiro.engines).toEqual(2);\n    });\n\n    it('should turn on', () => {\n      expect(kiro.on()).toBeTruthy();\n    });\n\n    it('should fly', () => {\n      expect(kiro.flying()).toBeTruthy();\n    });\n\n    it('should tell the news', () => {\n      expect(kiro.flying()).toEqual('This just in ...');\n    });\n  });\n});"]}