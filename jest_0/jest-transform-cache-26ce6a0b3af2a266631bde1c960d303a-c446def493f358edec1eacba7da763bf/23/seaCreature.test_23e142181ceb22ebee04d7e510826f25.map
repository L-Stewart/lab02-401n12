{"version":3,"sources":["seaCreature.test.js"],"names":["SeaCreature","require","describe","salmon","Fish","it","expect","tail","toEqual","swim","toBeTruthy","eat","poop","toBeUndefined","maine","Lobster"],"mappings":"AAAA,a,CAEA;;AACA,MAAMA,WAAW,GAAGC,OAAO,CAAC,kCAAD,CAA3B;;AAEAC,QAAQ,CAAC,cAAD,EAAiB,MAAM;AAE7BA,EAAAA,QAAQ,CAAC,MAAD,EAAS,MAAM;AAErB,QAAIC,MAAM,GAAG,IAAIH,WAAW,CAACI,IAAhB,CAAqB,MAArB,CAAb;AAEAC,IAAAA,EAAE,CAAC,aAAD,EAAgB,MAAM;AACtBC,MAAAA,MAAM,CAACH,MAAM,CAACI,IAAR,CAAN,CAAoBC,OAApB,CAA4B,CAA5B;AACD,KAFC,CAAF;AAIAH,IAAAA,EAAE,CAAC,UAAD,EAAa,MAAM;AACnBC,MAAAA,MAAM,CAACH,MAAM,CAACM,IAAP,EAAD,CAAN,CAAsBC,UAAtB;AACD,KAFC,CAAF;AAIAL,IAAAA,EAAE,CAAC,SAAD,EAAY,MAAM;AAClBC,MAAAA,MAAM,CAACH,MAAM,CAACQ,GAAP,EAAD,CAAN,CAAqBD,UAArB;AACD,KAFC,CAAF;AAIAL,IAAAA,EAAE,CAAC,aAAD,EAAgB,MAAM;AACtBC,MAAAA,MAAM,CAACH,MAAM,CAACS,IAAP,EAAD,CAAN,CAAsBC,aAAtB;AACD,KAFC,CAAF;AAID,GApBO,CAAR;AAsBAX,EAAAA,QAAQ,CAAC,SAAD,EAAY,MAAM;AAExB,QAAIY,KAAK,GAAG,IAAId,WAAW,CAACe,OAAhB,CAAwB,QAAxB,CAAZ;AAEAV,IAAAA,EAAE,CAAC,YAAD,EAAe,MAAM;AACrBC,MAAAA,MAAM,CAACH,MAAM,CAACI,IAAR,CAAN,CAAoBC,OAApB,CAA4B,CAA5B;AACD,KAFC,CAAF;AAIAH,IAAAA,EAAE,CAAC,UAAD,EAAa,MAAM;AACnBC,MAAAA,MAAM,CAACH,MAAM,CAACM,IAAP,EAAD,CAAN,CAAsBC,UAAtB;AACD,KAFC,CAAF;AAIAL,IAAAA,EAAE,CAAC,SAAD,EAAY,MAAM;AAClBC,MAAAA,MAAM,CAACH,MAAM,CAACQ,GAAP,EAAD,CAAN,CAAqBD,UAArB;AACD,KAFC,CAAF;AAIAL,IAAAA,EAAE,CAAC,UAAD,EAAa,MAAM;AACnBC,MAAAA,MAAM,CAACH,MAAM,CAACS,IAAP,EAAD,CAAN,CAAsBJ,OAAtB,CAA8B,mBAA9B;AACD,KAFC,CAAF;AAID,GApBO,CAAR;AAsBD,CA9CO,CAAR","sourcesContent":["'use strict';\n\n// const SeaCreature = require('../seaCreature/seaCreature-factory');\nconst SeaCreature = require('../seaCreature/seaCreature-class');\n\ndescribe('SeaCreatures', () => {\n\n  describe('Fish', () => {\n\n    let salmon = new SeaCreature.Fish('Mark');\n\n    it('has 2 tails', () => {\n      expect(salmon.tail).toEqual(2);\n    });\n\n    it('can swim', () => {\n      expect(salmon.swim()).toBeTruthy();\n    });\n\n    it('can eat', () => {\n      expect(salmon.eat()).toBeTruthy();\n    });\n\n    it('can\\'t poop', () => {\n      expect(salmon.poop()).toBeUndefined();\n    });\n\n  });\n\n  describe('Lobster', () => {\n\n    let maine = new SeaCreature.Lobster('Butter');\n\n    it('has 1 tail', () => {\n      expect(salmon.tail).toEqual(1);\n    });\n\n    it('can swim', () => {\n      expect(salmon.swim()).toBeTruthy();\n    });\n\n    it('can eat', () => {\n      expect(salmon.eat()).toBeTruthy();\n    });\n\n    it('can poop', () => {\n      expect(salmon.poop()).toEqual('Chocolate Milk!!!');\n    });\n\n  });\n\n});"]}