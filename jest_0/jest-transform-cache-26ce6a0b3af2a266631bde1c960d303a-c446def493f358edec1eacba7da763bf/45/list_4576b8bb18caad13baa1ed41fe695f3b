fee1e537487b6306b00f345709e7945c
'use strict';

/* istanbul ignore next */
var cov_1xdlsitdaq = function () {
  var path = "/home/lorin/cf/401/lab02-401n12/list/list.js";
  var hash = "80b2b1aa0fec81106f81bdff4ca48a17c8e4170c";

  var Function = function () {}.constructor;

  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/lorin/cf/401/lab02-401n12/list/list.js",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 20
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 7,
          column: 19
        }
      },
      "2": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 34
        }
      },
      "3": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 18
        }
      },
      "4": {
        start: {
          line: 25,
          column: 22
        },
        end: {
          line: 25,
          column: 44
        }
      },
      "5": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 34
        }
      },
      "6": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 18
        }
      },
      "7": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 23
        }
      },
      "8": {
        start: {
          line: 33,
          column: 0
        },
        end: {
          line: 33,
          column: 22
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 2
          },
          end: {
            line: 5,
            column: 3
          }
        },
        loc: {
          start: {
            line: 5,
            column: 16
          },
          end: {
            line: 8,
            column: 3
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 2
          },
          end: {
            line: 14,
            column: 3
          }
        },
        loc: {
          start: {
            line: 14,
            column: 13
          },
          end: {
            line: 18,
            column: 3
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 24,
            column: 2
          },
          end: {
            line: 24,
            column: 3
          }
        },
        loc: {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 29,
            column: 3
          }
        },
        line: 24
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {},
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

class List {
  constructor() {
    /* istanbul ignore next */
    cov_1xdlsitdaq.f[0]++;
    cov_1xdlsitdaq.s[0]++;
    this.length = 0;

    /* istanbul ignore next */
    cov_1xdlsitdaq.s[1]++;
    this.data = {};
  }
  /**
   * Add item to the end of the list
   * @param item
   */


  push(item) {
    /* istanbul ignore next */
    cov_1xdlsitdaq.f[1]++;
    cov_1xdlsitdaq.s[2]++;
    // Add an item to the end
    this.data[this.length] = item;

    /* istanbul ignore next */
    cov_1xdlsitdaq.s[3]++;
    this.length++;
  }
  /**
   * // Remove an item from the end of the list and return it's value
   * @returns {*}
   */


  pop() {
    /* istanbul ignore next */
    cov_1xdlsitdaq.f[2]++;
    let returnValue =
    /* istanbul ignore next */
    (cov_1xdlsitdaq.s[4]++, this.data[this.length]);

    /* istanbul ignore next */
    cov_1xdlsitdaq.s[5]++;
    delete this.data[this.length];

    /* istanbul ignore next */
    cov_1xdlsitdaq.s[6]++;
    this.length--;

    /* istanbul ignore next */
    cov_1xdlsitdaq.s[7]++;
    return returnValue;
  }

}

/* istanbul ignore next */
cov_1xdlsitdaq.s[8]++;
module.exports = List;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpc3QuanMiXSwibmFtZXMiOlsiTGlzdCIsImNvbnN0cnVjdG9yIiwibGVuZ3RoIiwiZGF0YSIsInB1c2giLCJpdGVtIiwicG9wIiwicmV0dXJuVmFsdWUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSxNQUFNQSxJQUFOLENBQVc7QUFFVEMsRUFBQUEsV0FBVyxHQUFHO0FBQUE7QUFBQTtBQUFBO0FBQ1osU0FBS0MsTUFBTCxHQUFjLENBQWQ7O0FBRFk7QUFBQTtBQUVaLFNBQUtDLElBQUwsR0FBWSxFQUFaO0FBQ0Q7QUFFRDs7Ozs7O0FBSUFDLEVBQUFBLElBQUksQ0FBQ0MsSUFBRCxFQUFPO0FBQUE7QUFBQTtBQUFBO0FBQ1Q7QUFDQSxTQUFLRixJQUFMLENBQVUsS0FBS0QsTUFBZixJQUF5QkcsSUFBekI7O0FBRlM7QUFBQTtBQUdULFNBQUtILE1BQUw7QUFDRDtBQUVEOzs7Ozs7QUFJQUksRUFBQUEsR0FBRyxHQUFHO0FBQUE7QUFBQTtBQUNKLFFBQUlDLFdBQVc7QUFBQTtBQUFBLDRCQUFHLEtBQUtKLElBQUwsQ0FBVSxLQUFLRCxNQUFmLENBQUgsQ0FBZjs7QUFESTtBQUFBO0FBRUosV0FBTyxLQUFLQyxJQUFMLENBQVUsS0FBS0QsTUFBZixDQUFQOztBQUZJO0FBQUE7QUFHSixTQUFLQSxNQUFMOztBQUhJO0FBQUE7QUFJSixXQUFPSyxXQUFQO0FBQ0Q7O0FBMUJROzs7O0FBOEJYQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJULElBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jbGFzcyBMaXN0IHtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmxlbmd0aCA9IDA7XG4gICAgdGhpcy5kYXRhID0ge307XG4gIH1cblxuICAvKipcbiAgICogQWRkIGl0ZW0gdG8gdGhlIGVuZCBvZiB0aGUgbGlzdFxuICAgKiBAcGFyYW0gaXRlbVxuICAgKi9cbiAgcHVzaChpdGVtKSB7XG4gICAgLy8gQWRkIGFuIGl0ZW0gdG8gdGhlIGVuZFxuICAgIHRoaXMuZGF0YVt0aGlzLmxlbmd0aF0gPSBpdGVtO1xuICAgIHRoaXMubGVuZ3RoKys7XG4gIH1cblxuICAvKipcbiAgICogLy8gUmVtb3ZlIGFuIGl0ZW0gZnJvbSB0aGUgZW5kIG9mIHRoZSBsaXN0IGFuZCByZXR1cm4gaXQncyB2YWx1ZVxuICAgKiBAcmV0dXJucyB7Kn1cbiAgICovXG4gIHBvcCgpIHtcbiAgICBsZXQgcmV0dXJuVmFsdWUgPSB0aGlzLmRhdGFbdGhpcy5sZW5ndGhdO1xuICAgIGRlbGV0ZSB0aGlzLmRhdGFbdGhpcy5sZW5ndGhdO1xuICAgIHRoaXMubGVuZ3RoLS07XG4gICAgcmV0dXJuIHJldHVyblZhbHVlO1xuICB9XG5cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBMaXN0O1xuIl19